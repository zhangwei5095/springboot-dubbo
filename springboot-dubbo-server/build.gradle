apply plugin: "war"
apply plugin: "eclipse"

group ="com.tdu"
version = "1.0.0"

sourceCompatibility = 1.7
targetCompatibility = 1.7
	
[compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'
  
repositories {
   mavenLocal()
   mavenCentral()
}

configurations {
}

subprojects{
	apply plugin: "java"
	apply plugin: "eclipse"
	
	group ="com.tdu"
	version = "1.0.0"
	
	sourceCompatibility = 1.7
	targetCompatibility = 1.7
		
	[compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'
	  
    repositories {
	   mavenLocal()
       mavenCentral()
    }
    eclipse{
		jdt{
			sourceCompatibility = 1.7
			targetCompatibility = 1.7
		}
	}
}

dependencies {
	providedRuntime(
		"org.springframework.boot:spring-boot-starter-jetty:${spring_boot_version}",
	)
	compile(
		"org.springframework.boot:spring-boot-starter:${spring_boot_version}",
		"org.springframework.boot:spring-boot-starter-web:${spring_boot_version}",
		"org.springframework.boot:spring-boot-autoconfigure:${spring_boot_version}",
		"org.springframework.boot:spring-boot-starter-security:${spring_boot_version}",
		"org.springframework.boot:spring-boot-starter-thymeleaf:${spring_boot_version}",
		"org.springframework.boot:spring-boot-starter-test:${spring_boot_version}",
		"org.springframework.boot:spring-boot-starter-jdbc:${spring_boot_version}",
		
		"org.springframework:spring-context-support:${spring_framework_version}",
		"org.springframework:spring-tx:${spring_framework_version}",
		"com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jackson_version}",
		"mysql:mysql-connector-java:${mysql_version}",
		"org.flywaydb:flyway-core:${flyway_version}",
		"org.mybatis:mybatis:${mybatis_version}",
		"org.mybatis:mybatis-spring:${mybatis_spring_version}",
		"org.mybatis.generator:mybatis-generator-core:${mybatis_generator_version}",
		"net.sf.ehcache:ehcache:${ehcache_version}",
		"junit:junit:${junit_version}",
		"com.github.sgroschupf:zkclient:${zkclient_version}",
		project(":springboot-dubbo-service")
	)
	compile ("com.alibaba:dubbo:${dubbo_version}"){
		exclude(module: 'spring')
	}
    //ext.jarTree = fileTree(dir: 'libs', include: '**/*.jar')
    testCompile ()
}

task sourceJar (type : Jar) {
	classifier = "sources"
	from sourceSets.main.allSource
}

task javadocJar (type: Jar, dependsOn: javadoc) {
	classifier = "javadoc"
	from javadoc.destinationDir
}

eclipse{
	jdt{
		sourceCompatibility = 1.7
		targetCompatibility = 1.7
	}
}
